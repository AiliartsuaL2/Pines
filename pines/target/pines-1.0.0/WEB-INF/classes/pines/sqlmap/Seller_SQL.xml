<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="SellerSpace">
	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/> <!-- 출력시(select) 필요한  list를 담는 변수 -->
	<typeAlias  alias="mainVO" type="pines.service.MainVO"/> <!-- 출력시(select) 필요한 변수 -->
	
	<select id="sellerDAO.selectStoreNameCheck" resultClass = "java.lang.Integer">
		SELECT COUNT(*) 
		  FROM STORE
	     WHERE STORE_NAME = #storeName#
	</select>
	
	<select id="sellerDAO.selectStoreBusNumCheck" resultClass = "java.lang.Integer">
		SELECT COUNT(*) 
		  FROM STORE
	     WHERE BUSINESS_REG_NUM = #businessRegNum#
	</select>
	
	<insert id="sellerDAO.insertSellerWrite">
		INSERT INTO STORE( 
							STORE_ID
						  , USER_ID
						  , BUSINESS_REG_NUM
						  , STORE_NAME
						  , SELLER_TYPE
						  , SIGN_STORE
						  , ACCOUNT_NUMBER
						  , BANK_NAME
						  , ACCOUNT_HOLDER
						  , STORE_REG_DATE
							)
					VALUES(
							  STORE_SEQ.NEXTVAL
							, #userId#
							, #businessRegNum#
							, #storeName#
							, #sellerType#
							, 'Y'
							, #accountNumber#
							, #bankName#
							, #accountHolder#
							, SYSDATE
						  )
	</insert>
	
	<select id="sellerDAO.selectSellerDeleteCheck" resultClass = "java.lang.Integer">
		SELECT COUNT(*) 
		  FROM STORE
	     WHERE USER_ID = #userId#
	       AND STORE_NAME = #storeName#
	       AND BUSINESS_REG_NUM = #businessRegNum#
	</select>
	
	
	<update id="sellerDAO.updateSellerDeleteSub">
  		UPDATE STORE
  		SET SIGN_STORE = 'N'
  		  , STORE_ID = 0
  		WHERE USER_ID= #userId#
  		  AND BUSINESS_REG_NUM = #businessRegNum#
  		  AND STORE_NAME = #storeName#
	</update>
	
	
		<select id="sellerDAO.selectSellerOrderDetail" resultClass="egovMap">
      SELECT (
              SELECT DISCOUNT_WON
                FROM PRODUCT_OPTION po 
               WHERE po.OPTION_ID = p.OPTION_ID 
              ) AS DISCOUNT_WON 
              , 
              (
               SELECT TOTAL_NUM 
                FROM PRODUCT_OPTION po 
               WHERE po.OPTION_ID = p.OPTION_ID 
              ) AS TOTAL_NUM  
              , o.USER_ID
              , o.ORDER_ZIPCODE
              , o.ORDER_ADDRESS
              , p.PRODUCT_ID 
              , p.PRODUCT_NAME 
              , p.PRODUCT_PRICE 
              , p.IMAGE1 
              , p.SHIPPING_COST
              , p.FREE_SHIPPING_PRICE
              , o.ORDER_ID 
              , o.NUM_OF_PRODUCT 
	          , to_char(o.PURCHASE_DATE,'yyyy"년" mm"월" dd"일" HH24"시"MI"분"') PURCHASE_DATE 
              , o.DELIVERY_STATUS
              , o.TOTAL_AMOUNT
              , o.ORDER_OPTION
              , (
                 SELECT s.STORE_NAME
                   FROM STORE s
                  WHERE p.STORE_ID = s.STORE_ID
                ) STORE_NAME
      	FROM ORDERS o join PRODUCT p 
       	  ON o.PRODUCT_ID = p.PRODUCT_ID 
       WHERE ORDER_ID = #orderId#
		</select>
		
		<update id="sellerDAO.updateDeliveryStatus">
  			UPDATE ORDERS
  			SET DELIVERY_STATUS = #deliveryStatus#
  			WHERE ORDER_ID= #orderId#
		</update>
		
		<select id="sellerDAO.selectSellerOrderInquiryTotal" resultClass="java.lang.Integer">
			SELECT COUNT(*) total 
	   	      FROM ORDERS o join PRODUCT p 
       	  	    ON o.PRODUCT_ID = p.PRODUCT_ID 
       		 WHERE STORE_ID = (
       							 SELECT STORE_ID 
                        		   FROM STORE
                          		  WHERE USER_ID = #userId#
                            		AND SIGN_STORE = 'Y'
                         		)
        	   AND to_char(add_months(SYSDATE,-1),'yyyy-mm-dd') <![CDATA[<=]]>  PURCHASE_DATE
               AND SYSDATE >= PURCHASE_DATE
		</select>
		
		<select id="sellerDAO.selectSearchBySellerOrderListTotal" resultClass="java.lang.Integer">
			SELECT COUNT(*) total 
      		  FROM ORDERS o join PRODUCT p 
       	  	    ON o.PRODUCT_ID = p.PRODUCT_ID 
       		 WHERE STORE_ID = (
       							 SELECT STORE_ID 
                    		       FROM STORE
                          		  WHERE USER_ID = #userId#
                            		AND SIGN_STORE = 'Y'
                         		)
         	  AND $searchGubun$ like '%$searchText$%'
         	  AND TO_DATE(#startOrderPeriod#,'YYYYMMDDHH24MISS') <![CDATA[<=]]>  o.PURCHASE_DATE
         	  AND  TO_DATE(#endOrderPeriod#,'YYYYMMDDHH24MISS') >= o.PURCHASE_DATE
		</select>
		
		<select id="sellerDAO.selectSellerInfo" resultClass="egovMap">
      		SELECT BUSINESS_REG_NUM
      			 , STORE_NAME
      			 , SELLER_TYPE
      			 , SIGN_STORE
      			 , ACCOUNT_NUMBER
      			 , BANK_NAME
      			 , ACCOUNT_HOLDER
      		 FROM STORE
      		WHERE USER_ID = #userId#
		</select>
		
		<update id="sellerDAO.updateSellerModify">
  			UPDATE "STORE"
  			SET ACCOUNT_NUMBER = #accountNumber#
  			  , BANK_NAME = #bankName#
  			  , ACCOUNT_HOLDER = #accountHolder#
  			WHERE USER_ID = #userId#
		</update>
		
		<select id="sellerDAO.selectSellerRevenueTotal" resultClass="java.lang.Integer">
			SELECT COUNT(*) total 
  			  FROM REVENUE r 
 			 WHERE STORE_ID = (
                    			SELECT STORE_ID
                      			  FROM STORE s 
                     			 WHERE USER_ID = #userId#
                                   AND SIGN_STORE = 'Y'
                    		   )
       		   AND TO_CHAR(add_months(sysdate,-1),'yyyy-mm-dd') <![CDATA[<=]]> SALES_DATE
       		   AND SYSDATE >= SALES_DATE
		</select>
		
		<select id="sellerDAO.selectSearchBySellerRevenueListTotal" resultClass="java.lang.Integer">
			SELECT COUNT(*) total 
  			  FROM REVENUE r 
 			 WHERE STORE_ID = (
                    			SELECT STORE_ID
                      			  FROM STORE s 
                     			 WHERE USER_ID = #userId#
                                   AND SIGN_STORE = 'Y'
                    		   )
         	  AND TO_DATE(#startOrderPeriod#,'YYYYMMDDHH24MISS') <![CDATA[<=]]>  SALES_DATE
         	  AND  TO_DATE(#endOrderPeriod#,'YYYYMMDDHH24MISS') >= SALES_DATE
		</select>
		
		<select id="sellerDAO.selectSearchBySellerRevenueList" resultClass="egovMap">
		
      		SELECT b.*
	    	   FROM ( 
	          		 SELECT ROWNUM rn, a.*
	            	   FROM (
	            	   			SELECT TO_CHAR(SETTLE_DATE,'yyyy-mm-dd') AS SETTLE_DATE
	            	    	     	  , SETTLE_AMOUNT
	            	    	     	  , NUM_OF_SALES
	            	    	     	  , TO_CHAR(SALES_DATE,'yyyy-mm-dd') AS SALES_DATE
	            	    	     	  , ACCOUNT_NUMBER
	            	    	     	  , ACCOUNT_HOLDER
	            	    	     	  , BANK_NAME
	            	    	     FROM REVENUE r
	            	    	    WHERE STORE_ID = (
	            	    	    
                    								SELECT STORE_ID
                    								  FROM STORE s
                    								 WHERE USER_ID = #userId#
													   AND SIGN_STORE = 'Y'
												  )
						          AND TO_DATE(#startOrderPeriod#,'YYYYMMDDHH24MISS') <![CDATA[<=]]>  SALES_DATE
						          AND  TO_DATE(#endOrderPeriod#,'YYYYMMDDHH24MISS') >= SALES_DATE
						        ORDER BY SALES_DATE
       				)a)  b
              WHERE rn >= #startIndex#  
          		AND rn <![CDATA[<=]]> #endIndex#
		</select>
		
		
	
	
</sqlMap>